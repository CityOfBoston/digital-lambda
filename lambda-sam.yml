AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Digital team Lambda functions

Parameters:
  LambdaStackName:
    Type: String
    Description: Parent stack name, used for naming

  LambdaExecutionRoleArn:
    Type: String
    Description: ARN for the role that Lambda functions will get

  NotificationsStackName:
    Type: String
    Description: Stack name for SNS notification topics

Resources:
  CloudFormationDeployFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${LambdaStackName}-CloudFormationDeployFunction"
      Description: Function to notify Slack when a CloudFormation deploy completes
      Role: !Ref LambdaExecutionRoleArn
      Handler: post-cloudformation-deploy.handler
      Runtime: nodejs6.10
      CodeUri: ./js/
      Events:
        SnsTopic:
          Type: SNS
          Properties:
            Topic:
              Fn::ImportValue:
                !Sub '${NotificationsStackName}:DeployTopicArn'

  CloudWatchAlarmFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${LambdaStackName}-CloudWatchAlarmFunction"
      Description: Function to notify Slack when a CloudWatch alarm fires
      Role: !Ref LambdaExecutionRoleArn
      Handler: post-cloudwatch-alarm.handler
      Runtime: nodejs6.10
      CodeUri: ./js/
      Events:
        SnsTopic:
          Type: SNS
          Properties:
            Topic:
              Fn::ImportValue:
                !Sub '${NotificationsStackName}:AlarmTopicArn'

  EcsInstanceDrainFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${LambdaStackName}-EcsInstanceDrainFunction"
      Description: Lambda code for the autoscaling hook triggers invoked when autoscaling events of launching and terminating instance occur
      Role: !Ref LambdaExecutionRoleArn
      Handler: "instance-drain.handler"
      Runtime: "python2.7"
      CodeUri: ./python/
      Timeout: 300
      Events:
        SnsTopic:
          Type: SNS
          Properties:
            Topic:
              Fn::ImportValue:
                !Sub '${NotificationsStackName}:ClusterLifecycleTopicArn'

  # EcsInstanceDrainInvokePermission:
  #   Type: "AWS::Lambda::Permission"
  #   Properties:
  #     FunctionName: !Ref EcsInstanceDrainFunction
  #     Action: lambda:InvokeFunction
  #     Principal: "sns.amazonaws.com"
  #     SourceArn:
  #       Fn::ImportValue:
  #         !Sub '${NotificationsStackName}:ClusterLifecycleTopicArn'
